server:
  port: 8081

spring:
  application:
    name: auth-service

  # Database Configuration
  datasource:
    url: jdbc:postgresql://localhost:5432/ops?currentSchema=auth
    username: ops
    password: ops
    driver-class-name: org.postgresql.Driver

  # JPA/Hibernate
  jpa:
    hibernate:
      ddl-auto: none
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect

  # Redis Configuration
  redis:
    host: localhost
    port: 6379

  # Kafka Configuration
  kafka:
    bootstrap-servers: localhost:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

  # Flyway configuration
  flyway:
    enabled: true
    schemas: auth
    locations: classpath:db/migration
    baseline-on-migrate: true

  # Mail settings
  mail:
    host: smtp.gmail.com
    port: 587
    username: ${MAIL_USERNAME:your-email@gmail.com}
    password: ${MAIL_PASSWORD:your-app-password}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
            required: true

# Rate Limiting Configuration
resilience4j:
  ratelimiter:
    instances:
      loginRateLimiter:
        limitForPeriod: 10
        limitRefreshPeriod: 1m
        timeoutDuration: 10ms
      refreshTokenRateLimiter:
        limitForPeriod: 30
        limitRefreshPeriod: 1m
        timeoutDuration: 10ms

# Actuator endpoints
management:
  endpoints:
    web:
      exposure:
        include: health,info,prometheus,metrics
  endpoint:
    health:
      show-details: always
      probes:
        enabled: true

# Custom Application Properties
app:
  jwt:
    secret: ${JWT_SECRET:Q2POR7Mf/jft9Ul32R7jvtjylaSNQ+RM5UqlHT808okmOydt7RW9rDSO3RwXhKnQtja8ZZgI5Y+xd+aIVg5vOQ==}
    access-token-expiration-ms: 900000    # 15 minutes
    refresh-token-expiration-ms: 86400000 # 24 hours
    keystore: keystore.jks
    keystore-password: ${KEYSTORE_PASSWORD:password}
    key-alias: jwtsigning
    private-key-passphrase: ${PRIVATE_KEY_PASSPHRASE:password}
  topic:
    auth-events: auth-events
  force-single-session: true